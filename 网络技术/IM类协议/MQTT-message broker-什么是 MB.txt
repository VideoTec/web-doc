
http://blog.csdn.net/wangchengsi/article/details/2421447
MB的全称是message broker，即“消息代理”。
“消息”一词前几年比较火，消息中间件也卖的很火，
当时似乎J2EE的产品都要跟“消息”、“中间件”扯上点关系，以彰显潮流。
我觉得初学者只需记住“消息”的异步性即可，
也就是“消息”和传统的网络连接、远程方法调用等的最大区别，
就是你一旦发出消息以后，不用再管它的死活，中间件会处理一切事务，
出了问题也会通知你，这样可以更好的分离业务逻辑。
把消息当成邮件的话，
那么传统网络连接就是由你去送信，
而中间件则好比邮局，
它来提供送信服务，并且可以跨国境、跨语言，
完全不用你操心（相当于中间件可以连接异构平台），使用者只需等在家门口收信。

所有组件的MQ队列都可以直接连接到MB上，MB相当于一个公共服务中心。
MB接收所有消息，然后自动分析其中的内容，找到相应的目的地，进行路由转发，
好比你在写信时，只需写明收信人的姓名、身份证，哪怕收信人搬到天涯海角，
只要他在MB邮局中登记了，那MB就可以把信交给他，
这样进一步地分离了业务和底层通信，
我只需要知道业务概念上的“他”，就可以把消息交给他。

此外，MB还可以进行消息转换，这就像是自动翻译信件，
我现在可以用中文写封信给本拉登，
我不需要知道他具体藏在哪里，
信件就会自动翻译成阿富汗的文字，送到本拉登手里。

所以，代理的两个核心功能就是：“消息路由”和“消息格式转换”。
MB本质上也是一个服务总线，
所有的服务组件接入到MB中，
服务将消息塞给MB，MB来决定怎么转发，
这样让服务愈加成为一个独立的实体，
和其他服务的耦合性进一步降低，从而达到SOA的境界 (SOA：服务即应用)