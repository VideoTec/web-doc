在那里找 configure 见 nginx 《nginx源码目录结构》

-----------------------------------------------------------
http://tengine.taobao.org/book/chapter_09.html
详细讲解 configure 脚本
-----------------------------------------------------------

nginx的编译旅程将从configure开始，
configure脚本将根据我们输入的选项、系统环境参与来生成所需的文件（包含源文件与Makefile文件）。
configure会调用一系列auto脚本来实现编译环境的初始化。

-----------------------------------------------------------
https://nginx.org/en/docs/configure.html
-----------------------------------------------------------

Example of parameters usage (all of this needs to be typed in one line):

./configure
    --sbin-path=/usr/local/nginx/nginx
    --conf-path=/usr/local/nginx/nginx.conf
    --pid-path=/usr/local/nginx/nginx.pid
    --with-http_ssl_module
    --with-pcre=../pcre-8.39
    --with-zlib=../zlib-1.2.8
After configuration, nginx is compiled and installed using make.

Building nginx from Sources

The build is configured using the configure command. 
It defines various aspects of the system, 
including the methods nginx is allowed to use for connection processing. 
At the end it creates a Makefile. 

2016.9.6 编译使用配置
./configure --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.8

错误：
zhaoqiangdeMac-mini:auto wangxiang$ ./configure --with-pcre=../pcre-8.39 --with-zlib=../zlib-1.2.8
./configure: line 10: auto/options: No such file or directory --- 难道要把 configure 复制到 nginx 目录下？是的
zhaoqiangdeMac-mini:auto wangxiang$ ls
cc		have		install		nohave		summary
configure	have_headers	lib		options		threads
define		headers		make		os		types
endianness	include		module		sources		unix
feature		init		modules		stubs

make

错误：
zhaoqiangdeMac-mini:nginx wangxiang$ make
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f objs/Makefile
cd ../zlib-1.2.8 \
	&& /Applications/Xcode.app/Contents/Developer/usr/bin/make distclean \
	&& CFLAGS="-O2 -pipe " CC="cc" \
		./configure \
	&& /Applications/Xcode.app/Contents/Developer/usr/bin/make libz.a
make -f Makefile.in distclean
rm -f *.o *.lo *~ \
	   example minigzip examplesh minigzipsh \
	   example64 minigzip64 \
	   infcover \
	   libz.* foo.gz so_locations \
	   _match.s maketree contrib/infback9/*.o
rm -rf objs
rm -f *.gcda *.gcno *.gcov
rm -f contrib/infback9/*.gcda contrib/infback9/*.gcno contrib/infback9/*.gcov
cp -p zconf.h.in zconf.h
rm -f Makefile zlib.pc configure.log
/bin/sh: ./configure: Permission denied
make[1]: *** [../zlib-1.2.8/libz.a] Error 126
make: *** [build] Error 2

需要给 zlib-1.2.8/configure 增加可执行权限吗？
-rw-r--r--   1 wangxiang  staff  26082 Sep  6 22:17 configure
sudo chmod +x configure
-rwxr-xr-x   1 wangxiang  staff  26082 Sep  6 22:17 configure

make 后的目录

zhaoqiangdeMac-mini:nginx wangxiang$ ls -l
total 16
-rw-r--r--   1 wangxiang  staff   376 Sep  6 23:03 Makefile
drwxr-xr-x  26 wangxiang  staff   884 Aug 31 20:46 auto
drwxr-xr-x  11 wangxiang  staff   374 Aug 31 20:46 conf
-rwxr-xr-x   1 wangxiang  staff  2481 Sep  6 23:02 configure
drwxr-xr-x   6 wangxiang  staff   204 Aug 31 20:46 contrib
drwxr-xr-x  10 wangxiang  staff   340 Aug 31 20:46 docs
drwxr-xr-x   4 wangxiang  staff   136 Aug 31 20:46 misc
drwxr-xr-x  11 wangxiang  staff   374 Sep  6 23:15 objs
drwxr-xr-x   9 wangxiang  staff   306 Aug 31 20:46 src

zhaoqiangdeMac-mini:objs wangxiang$ ls -l
total 2120
-rw-r--r--  1 wangxiang  staff   39153 Sep  6 23:03 Makefile
-rw-r--r--  1 wangxiang  staff   21241 Sep  6 23:03 autoconf.err
-rwxr-xr-x  1 wangxiang  staff  963044 Sep  6 23:15 nginx
-rw-r--r--  1 wangxiang  staff    5341 Sep  6 23:15 nginx.8
-rw-r--r--  1 wangxiang  staff    5176 Sep  6 23:03 ngx_auto_config.h
-rw-r--r--  1 wangxiang  staff     531 Sep  6 23:03 ngx_auto_headers.h
-rw-r--r--  1 wangxiang  staff    5511 Sep  6 23:03 ngx_modules.c
-rw-r--r--  1 wangxiang  staff   22360 Sep  6 23:06 ngx_modules.o
drwxr-xr-x  9 wangxiang  staff     306 Sep  6 23:03 src

sudo make install

zhaoqiangdeMac-mini:nginx wangxiang$ sudo make install
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f objs/Makefile install
test -d '/usr/local/nginx' || mkdir -p '/usr/local/nginx'
test -d '/usr/local/nginx/sbin' \
		|| mkdir -p '/usr/local/nginx/sbin'
test ! -f '/usr/local/nginx/sbin/nginx' \
		|| mv '/usr/local/nginx/sbin/nginx' \
			'/usr/local/nginx/sbin/nginx.old'
cp objs/nginx '/usr/local/nginx/sbin/nginx'
test -d '/usr/local/nginx/conf' \
		|| mkdir -p '/usr/local/nginx/conf'
cp conf/koi-win '/usr/local/nginx/conf'
cp conf/koi-utf '/usr/local/nginx/conf'
cp conf/win-utf '/usr/local/nginx/conf'
test -f '/usr/local/nginx/conf/mime.types' \
		|| cp conf/mime.types '/usr/local/nginx/conf'
cp conf/mime.types '/usr/local/nginx/conf/mime.types.default'
test -f '/usr/local/nginx/conf/fastcgi_params' \
		|| cp conf/fastcgi_params '/usr/local/nginx/conf'
cp conf/fastcgi_params \
		'/usr/local/nginx/conf/fastcgi_params.default'
test -f '/usr/local/nginx/conf/fastcgi.conf' \
		|| cp conf/fastcgi.conf '/usr/local/nginx/conf'
cp conf/fastcgi.conf '/usr/local/nginx/conf/fastcgi.conf.default'
test -f '/usr/local/nginx/conf/uwsgi_params' \
		|| cp conf/uwsgi_params '/usr/local/nginx/conf'
cp conf/uwsgi_params \
		'/usr/local/nginx/conf/uwsgi_params.default'
test -f '/usr/local/nginx/conf/scgi_params' \
		|| cp conf/scgi_params '/usr/local/nginx/conf'
cp conf/scgi_params \
		'/usr/local/nginx/conf/scgi_params.default'
test -f '/usr/local/nginx/conf/nginx.conf' \
		|| cp conf/nginx.conf '/usr/local/nginx/conf/nginx.conf'
cp conf/nginx.conf '/usr/local/nginx/conf/nginx.conf.default'
test -d '/usr/local/nginx/logs' \
		|| mkdir -p '/usr/local/nginx/logs'
test -d '/usr/local/nginx/logs' \
		|| mkdir -p '/usr/local/nginx/logs'
test -d '/usr/local/nginx/html' \
		|| cp -R docs/html '/usr/local/nginx'
test -d '/usr/local/nginx/logs' \
		|| mkdir -p '/usr/local/nginx/logs'

安装完后，测试
/usr/local/nginx/sbin/nginx -h 打印帮助文档
zhaoqiangdeMac-mini:nginx wangxiang$ sbin/nginx -h
nginx version: nginx/1.11.3
Usage: nginx [-?hvVtTq] [-s signal] [-c filename] [-p prefix] [-g directives]

Options:
  -?,-h         : this help
  -v            : show version and exit
  -V            : show version and configure options then exit
  -t            : test configuration and exit
  -T            : test configuration, dump it and exit
  -q            : suppress non-error messages during configuration testing
  -s signal     : send signal to a master process: stop, quit, reopen, reload
  -p prefix     : set prefix path (default: /usr/local/nginx/)
  -c filename   : set configuration file (default: conf/nginx.conf)
  -g directives : set global directives out of configuration file

sudo /usr/local/nginx/sbin/nginx 启动 nginx 服务器
zhaoqiangdeMac-mini:logs wangxiang$ ps -A | grep nginx 查看进程
 5983 ??         0:00.00 nginx: master process ./nginx
 5984 ??         0:00.00 nginx: worker process
 5990 ttys000    0:00.00 grep nginx

zhaoqiangdeMac-mini:nginx wangxiang$ sudo sbin/nginx -s stop 停止服务
zhaoqiangdeMac-mini:nginx wangxiang$ ps -A | grep nginx
 5997 ttys000    0:00.00 grep nginx



-----------------------------------------------------------
The configure command supports the following parameters:
-----------------------------------------------------------
--prefix=path		/usr/local/nginx
--sbin-path=path	prefix/sbin/nginx
--conf-path=path	prefix/conf/nginx.conf
--pid-path=path		prefix/logs/nginx.pid
--error-log-path=path	prefix/logs/error.log
--http-log-path=path	prefix/logs/access.log

--user=name		The default user name is nobody
--group=name		By default, a group name is set to the name of an unprivileged user

--with-select_module
--without-select_module

--with-poll_module
--without-poll_module

--without-http_gzip_module      需要 zlib library
--without-http_rewrite_module	需要 PCRE library
--without-http_proxy_module

--with-http_ssl_module

--with-zlib=path	(version 1.1.3 — 1.2.8)
--with-pcre=path	(version 4.4 — 8.39) 
--with-pcre-jit		“just-in-time compilation” support

--with-cc-opt=parameters
--with-ld-opt=parameters

---------------------------------------------------
https://sourceforge.net/projects/pcre/files/pcre/
---------------------------------------------------
下载 pcre-8.39.tar.bz2 解压命令：tar -zxvf pcre-8.32.tar.gz 
The Perl Compatible Regular Expressions (PCRE) library is a set of functions 
that implement regular expression pattern matching using the same syntax and semantics as Perl 5. 
PCRE has its own native API, in addition to a set of POSIX compatible wrapper functions.

---------------------------------------------------
http://www.zlib.net/
---------------------------------------------------
下载 zlib-1.2.8.tar.gz

zlib是提供数据压缩用的函式库，由Jean-loup Gailly与Mark Adler所开发，初版0.9版在1995年5月1日发表。
zlib使用DEFLATE算法，最初是为libpng函式库所写的，后来普遍为许多软件所使用。
此函式库为自由软件，使用zlib授权。
截至2007年3月，zlib是包含在Coverity的美国国土安全部赞助者选择继续审查的开源项目

今天，zlib是一种事实上的业界标准，以至于在标准文档中，zlib和DEFLATE常常互换使用。
数以千计的应用程序直接或间接依靠zlib压缩函式库

---------------------------------------------------
详细说明
---------------------------------------------------

--prefix=path — defines a directory that will keep server files. This same directory will also be used for all relative paths set by configure (except for paths to libraries sources) and in the nginx.conf configuration file. It is set to the /usr/local/nginx directory by default.

--sbin-path=path — sets the name of an nginx executable file. This name is used only during installation. By default the file is named prefix/sbin/nginx.

--conf-path=path — sets the name of an nginx.conf configuration file. If needs be, nginx can always be started with a different configuration file, by specifying it in the command-line parameter -c file. By default the file is named prefix/conf/nginx.conf.

--pid-path=path — sets the name of an nginx.pid file that will store the process ID of the main process. After installation, the file name can always be changed in the nginx.conf configuration file using the pid directive. By default the file is named prefix/logs/nginx.pid.

--error-log-path=path — sets the name of the primary error, warnings, and diagnostic file. After installation, the file name can always be changed in the nginx.conf configuration file using the error_log directive. By default the file is named prefix/logs/error.log.

--http-log-path=path — sets the name of the primary request log file of the HTTP server. After installation, the file name can always be changed in the nginx.conf configuration file using the access_log directive. By default the file is named prefix/logs/access.log.

--user=name — sets the name of an unprivileged user whose credentials will be used by worker processes. After installation, the name can always be changed in the nginx.conf configuration file using the user directive. The default user name is nobody.

--group=name — sets the name of a group whose credentials will be used by worker processes. After installation, the name can always be changed in the nginx.conf configuration file using the user directive. By default, a group name is set to the name of an unprivileged user.

--with-select_module
--without-select_module — enables or disables building a module that allows the server to work with the select() method. This module is built automatically if the platform does not appear to support more appropriate methods such as kqueue, epoll, or /dev/poll.

--with-poll_module
--without-poll_module — enables or disables building a module that allows the server to work with the poll() method. This module is built automatically if the platform does not appear to support more appropriate methods such as kqueue, epoll, or /dev/poll.

--without-http_gzip_module — disables building a module that compresses responses of an HTTP server. The zlib library is required to build and run this module.

--without-http_rewrite_module — disables building a module that allows an HTTP server to redirect requests and change URI of requests. The PCRE library is required to build and run this module.

--without-http_proxy_module — disables building an HTTP server proxying module.

--with-http_ssl_module — enables building a module that adds the HTTPS protocol support to an HTTP server. This module is not built by default. The OpenSSL library is required to build and run this module.

--with-pcre=path — sets the path to the sources of the PCRE library. The library distribution (version 4.4 — 8.39) needs to be downloaded from the PCRE site and extracted. The rest is done by nginx’s ./configure and make. The library is required for regular expressions support in the location directive and for the ngx_http_rewrite_module module.

--with-pcre-jit — builds the PCRE library with “just-in-time compilation” support (1.1.12, the pcre_jit directive).

--with-zlib=path — sets the path to the sources of the zlib library. The library distribution (version 1.1.3 — 1.2.8) needs to be downloaded from the zlib site and extracted. The rest is done by nginx’s ./configure and make. The library is required for the ngx_http_gzip_module module.

--with-cc-opt=parameters — sets additional parameters that will be added to the CFLAGS variable. When using the system PCRE library under FreeBSD, --with-cc-opt="-I /usr/local/include" should be specified. If the number of files supported by select() needs to be increased it can also be specified here such as this: --with-cc-opt="-D FD_SETSIZE=2048".

--with-ld-opt=parameters — sets additional parameters that will be used during linking. When using the system PCRE library under FreeBSD, --with-ld-opt="-L /usr/local/lib" should be specified.
